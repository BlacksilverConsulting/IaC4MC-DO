---
- name: Set plugin name
  ansible.builtin.set_fact:
    plugins_name: "EssentialsX Config"
    plugins_path: "plugins/Essentials"

- name: "Stop minecraft service before installing {{ plugins_name }}"
  ansible.builtin.service:
    name: minecraft
    state: stopped

- name: "Copy configuration files for {{ plugins_name }}"
  ansible.posix.synchronize:
    delete: true
    recursive: true
    src: "../../big_lc/{{ plugins_path }}"
    dest: "{{ minecraft_server_dir }}/{{ plugins_path }}"
    partial: true
    mode: "push"
  register: plugins_ess_config

- name: "Reset config file ownership/permissions for {{ plugins_name }}"
  ansible.builtin.file:
    path: "{{ minecraft_server_dir }}/{{ plugins_path }}"
    owner: "{{ minecraft_user }}"
    group: "{{ minecraft_group }}"
    mode: "0644"
    state: "directory"
    recurse: true

- name: "Reset config file ownership/permissions for {{ plugins_name }}"
  ansible.builtin.file:
    path: "{{ minecraft_server_dir }}/{{ plugins_path }}"
    owner: "{{ minecraft_user }}"
    group: "{{ minecraft_group }}"
    mode: "0744"
    state: "directory"
    recurse: false

- name: "Restart after configuring {{ plugins_name }}"
  ansible.builtin.include_role:
    name: restart_server
  when: plugins_ess_config.changed # noqa: no-handler
    # This (^^^) can't be a handler because the restart has to
    # happen before the next plugin is installed.
